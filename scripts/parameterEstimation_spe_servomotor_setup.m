function parameterEstimation_spe_servomotor_setup(p)
%PARAMETERESTIMATION_SPE_SERVOMOTOR_SETUP
%
% Set up a parameter estimation problem for the spe_servomotor model.
%
% The function creates objects that can be used to solve a parameter
% estimation problem with Simulink Compiler. The input argument, p,
% defines the model parameters to estimate, if omitted the parameters
% specified in the function body are estimated.
%
% Modify the function to include or exclude new experiments. To
% see an example, type:
% openExample('sldo/BatteryDegradationParameterEstimationDeploymentExample')

%
% Auto-generated by SPETOOL on 27-Aug-2024 11:40:22.

%% Load the ID database of all test points
load testpointDatabase testpointDatabase

%% Open the model.
open_system('spe_servomotor')

%% Specify Model Parameters to Estimate
%
if nargin < 1 || isempty(p)
    p = sdo.getParameterFromModel('spe_servomotor',{'B','J','Km','La','Ra'});
    p(1).Value = 0.008;
    p(1).Minimum = 0;
    p(1).Scale = 0.008;
    p(2).Value = 5.7e-07;
    p(2).Minimum = 0;
    p(2).Scale = 5.7e-07;
    p(3).Value = 0.0134;
    p(3).Minimum = 0;
    p(3).Scale = 0.0134;
    p(4).Value = 6.499999999999999e-05;
    p(4).Minimum = 0;
    p(4).Scale = 6.499999999999999e-05;
    p(5).Value = 1.9;
    p(5).Minimum = 0;
    p(5).Scale = 1.9;
end

%% Define the Estimation Experiments
%

EstimationData = sdo.Experiment('spe_servomotor');

%%
% Specify the experiment input data used to generate the output.
EstimationData_Sig_Input = Simulink.SimulationData.Signal;
EstimationData_Sig_Input.Values    = timeseries([11;12;13], [0;5;10]);
EstimationData_Sig_Input.BlockPath = 'spe_servomotor/Input Signal (V)';
EstimationData_Sig_Input.PortType  = 'inport';
EstimationData_Sig_Input.PortIndex = 1;
EstimationData_Sig_Input.Name      = 'spe_servomotor/Input Signal (V):1';
EstimationData.InputData = EstimationData_Sig_Input;

%%
% Specify the measured experiment output data.
EstimationData_Sig_Output = Simulink.SimulationData.Signal;
EstimationData_Sig_Output.Values    = timeseries([11;12;13], [0;5;10]);
EstimationData_Sig_Output.BlockPath = 'spe_servomotor/rad to deg';
EstimationData_Sig_Output.PortType  = 'outport';
EstimationData_Sig_Output.PortIndex = 1;
EstimationData_Sig_Output.Name      = 'spe_servomotor/rad to deg:1';
EstimationData.OutputData = EstimationData_Sig_Output;

%%
% Create a model simulator from an experiment
Simulator = createSimulator(EstimationData);

%% Configure setup and restoration of simulator
%

% Setup simulator
Simulator = setup(Simulator, 'FastRestart', 'off');

% Add Cleanup tasks to restore any changes after completion/termination.
% Use an anonymous function with no arguments that calls the restore method.
SimulatorCleanup = onCleanup(@() restore(Simulator));

%% Prepare for Deployment
%
% Configure objects for deployment and save to a MATLAB file.
EstimationData = prepareToDeploy(EstimationData);
Simulator = prepareToDeploy(Simulator,p);

for ct = 1:numel(testpointDatabase)
    id = testpointDatabase{ct};
    MATFile = ['spe_servomotorObjectsToDeploy','_',id,'.mat'];
    save(MATFile,"EstimationData","Simulator","p");
end
end

